[
  {
      "id": "ab7c3e09.cb342",
      "type": "subflow",
      "name": "Authorization",
      "info": "Access control for the chatbot. Use the configuration panel to set the chatbot *public* or *private*.\n\nIn a *private* chatbot, only authorized users can access it. In a *public* chatbot, all users can access the chatbot unless they are suspended.\n\nUse the User panel to set the *authorized* or *suspended* flags:\n\n![](https://dashboard.red-bot.io/assets/d9c6c84c-d3f5-4935-820b-0dda80ba52fb)\n\nUse the node as a pass-thru node: if the user is allowed to access the chatbot the flow will be redirected to the first output, otherwise the second output  \n\n![](https://dashboard.red-bot.io/assets/78677371-60ee-4534-a3ef-e287212d3acb)\n\n**Changelog**\n\n_1.2.0_: Improved documentation\n\n_1.1.1_: fixed translations and configuration not loaded properly at startup\n\n_1.1.0_: added subflow status\n\n_0.9.0_: authorize users\n\n_0.9.1_: fix if user not found",
      "category": "RedBot Flows",
      "in": [
          {
              "x": 120,
              "y": 180,
              "wires": [
                  {
                      "id": "8a1f9031.e31c"
                  }
              ]
          }
      ],
      "out": [
          {
              "x": 1200,
              "y": 220,
              "wires": [
                  {
                      "id": "1041a80.7ae6758",
                      "port": 0
                  }
              ]
          },
          {
              "x": 1200,
              "y": 320,
              "wires": [
                  {
                      "id": "f86dd4e6.f3c868",
                      "port": 0
                  },
                  {
                      "id": "e17ee230.4d216",
                      "port": 0
                  },
                  {
                      "id": "6a81f4e7.bb1b0c",
                      "port": 0
                  }
              ]
          }
      ],
      "env": [
          {
              "name": "chatbotId",
              "type": "str",
              "value": "",
              "ui": {
                  "label": {
                      "en-US": "Chatbot Id"
                  },
                  "type": "input",
                  "opts": {
                      "types": [
                          "str"
                      ]
                  }
              }
          }
      ],
      "meta": {
          "module": "redbot-authorization",
          "type": "redbot-authorization",
          "version": "1.2.0",
          "author": "Guido Bellomo",
          "desc": "Authorization node for Mission Control",
          "keywords": "guido.bellomo@gmail.com",
          "license": "MIT"
      },
      "color": "#ff6633",
      "outputLabels": [
          "User authorized or not suspended",
          "User not authorized or suspended "
      ],
      "icon": "font-awesome/fa-key",
      "status": {
          "x": 920,
          "y": 460,
          "wires": [
              {
                  "id": "577aefb850cdddad",
                  "port": 0
              }
          ]
      }
  },
  {
      "id": "260f24fe.f463ac",
      "type": "mc-configuration",
      "z": "ab7c3e09.cb342",
      "namespace": "redbot-authorization",
      "chatbotId": "",
      "debug": true,
      "loadOnStartup": false,
      "inputs": 1,
      "x": 570,
      "y": 460,
      "wires": [
          [
              "577aefb850cdddad"
          ]
      ]
  },
  {
      "id": "b4a66080.3f871",
      "type": "function",
      "z": "ab7c3e09.cb342",
      "name": "Check if suspended",
      "func": "const { user } = msg.payload || {};\nconst privateChatbot = global.get('redbot-authorization_private'); \n\nif (privateChatbot) {\n  if (user != null && user.payload != null && user.payload.authorized) {\n    return [msg, null, null];    \n  } else {\n    return [null, msg, null];    \n  }\n}\n\nif (!privateChatbot) {\n  if (user != null && user.payload != null && user.payload.suspended) {\n    return [null, null, msg];    \n  } else {\n    return [msg, null, null];    \n  }\n}\n\n\n\n",
      "outputs": 3,
      "noerr": 0,
      "initialize": "",
      "finalize": "",
      "libs": [],
      "x": 540,
      "y": 180,
      "wires": [
          [
              "1041a80.7ae6758"
          ],
          [
              "f86dd4e6.f3c868"
          ],
          [
              "e17ee230.4d216"
          ]
      ]
  },
  {
      "id": "8a1f9031.e31c",
      "type": "mc-graphql",
      "z": "ab7c3e09.cb342",
      "name": "",
      "query": "query {\n  user(userId: \"{{userId}}\") {\n    id,\n    first_name,\n    last_name,\n    username,\n    payload\n  }\n}",
      "debug": true,
      "noerr": 0,
      "x": 270,
      "y": 180,
      "wires": [
          [
              "b4a66080.3f871",
              "0ea7f8003f3a9715"
          ],
          [
              "6a81f4e7.bb1b0c"
          ],
          []
      ]
  },
  {
      "id": "1041a80.7ae6758",
      "type": "chatbot-pop-message",
      "z": "ab7c3e09.cb342",
      "x": 800,
      "y": 140,
      "wires": [
          []
      ]
  },
  {
      "id": "f86dd4e6.f3c868",
      "type": "chatbot-message",
      "z": "ab7c3e09.cb342",
      "name": "Not authorized",
      "message": [
          {
              "message": "{{tx.authorization.notAuthorized}}"
          }
      ],
      "language": "none",
      "x": 800,
      "y": 180,
      "wires": [
          []
      ]
  },
  {
      "id": "e17ee230.4d216",
      "type": "chatbot-message",
      "z": "ab7c3e09.cb342",
      "name": "Suspended",
      "message": [
          {
              "message": "{{tx.authorization.suspended}}"
          }
      ],
      "language": "none",
      "x": 790,
      "y": 220,
      "wires": [
          []
      ]
  },
  {
      "id": "6a81f4e7.bb1b0c",
      "type": "chatbot-message",
      "z": "ab7c3e09.cb342",
      "name": "User not found",
      "message": [
          {
              "message": "{{tx.authorization.userNotFound}}"
          }
      ],
      "language": "none",
      "x": 800,
      "y": 320,
      "wires": [
          []
      ]
  },
  {
      "id": "577aefb850cdddad",
      "type": "function",
      "z": "ab7c3e09.cb342",
      "name": "Status",
      "func": "const { payload } = msg;\n\nreturn {\n    ...msg,\n    payload: {\n        shape: 'dot',\n    text: payload.private ? 'Private bot' : 'Public bot',\n    fill: payload.private ? 'red' : 'green'\n    }\n};",
      "outputs": 1,
      "noerr": 0,
      "initialize": "",
      "finalize": "",
      "libs": [],
      "x": 800,
      "y": 460,
      "wires": [
          []
      ]
  },
  {
      "id": "a1a46e3b3ec22969",
      "type": "comment",
      "z": "ab7c3e09.cb342",
      "name": "Authorization subflow",
      "info": "",
      "x": 180,
      "y": 40,
      "wires": []
  },
  {
      "id": "0ea7f8003f3a9715",
      "type": "debug",
      "z": "ab7c3e09.cb342",
      "name": "debug 1",
      "active": true,
      "tosidebar": true,
      "console": false,
      "tostatus": false,
      "complete": "false",
      "statusVal": "",
      "statusType": "auto",
      "x": 490,
      "y": 80,
      "wires": []
  },
  {
      "id": "16a2c09d743e1b7f",
      "type": "inject",
      "z": "ab7c3e09.cb342",
      "name": "",
      "props": [],
      "repeat": "",
      "crontab": "",
      "once": true,
      "onceDelay": 0.1,
      "topic": "",
      "x": 100,
      "y": 460,
      "wires": [
          [
              "f9afeb6d45dc8b31"
          ]
      ]
  },
  {
      "id": "f9afeb6d45dc8b31",
      "type": "function",
      "z": "ab7c3e09.cb342",
      "name": "Get chatbotId",
      "func": "return {\n    ...msg,\n    chatbotId: env.get('chatbotId')\n};",
      "outputs": 1,
      "noerr": 0,
      "initialize": "",
      "finalize": "",
      "libs": [],
      "x": 300,
      "y": 460,
      "wires": [
          [
              "260f24fe.f463ac"
          ]
      ]
  }
]