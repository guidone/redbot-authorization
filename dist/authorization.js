/*!
 * Name: redbot-authorization
 * Id: redbot-authorization
 * Version: 1.1.0
 * Description: Handle user authorization and suspension in the chatbot. A plugin for Red-Bot.io
 * Author: Guido Bellomo (https://github.com/guidone)
 * Repository: https://github.com/guidone/redbot-authorization
 */
define(["react","code-plug","../../src/components","rsuite","../../../src/components"],(e,t,r,n,o)=>(()=>{"use strict";var a={570:e=>{e.exports=o},727:e=>{e.exports=r},737:e=>{e.exports=t},650:t=>{t.exports=e},131:e=>{e.exports=n}},l={};function s(e){var t=l[e];if(void 0!==t)return t.exports;var r=l[e]={exports:{}};return a[e](r,r.exports,s),r.exports}s.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return s.d(t,{a:t}),t},s.d=(e,t)=>{for(var r in t)s.o(t,r)&&!s.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},s.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),s.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var u={};return(()=>{s.r(u);var e=s(650),t=s.n(e),r=s(737),n=s(727),o=s(131);const a=({formValue:e={},formError:r=null,onChange:n})=>(e=e||{},t().createElement(o.Form,{formValue:e,formError:r,onChange:n,fluid:!0,autoComplete:"off"},t().createElement(o.FormGroup,null,t().createElement(o.ControlLabel,null,"Authorized"),t().createElement(o.Toggle,{onChange:t=>n({...e,authorized:t,suspended:!t&&e.suspended}),checked:e.authorized}),t().createElement(o.HelpBlock,null,"Only authorized users can access private chatbot")),t().createElement(o.FormGroup,null,t().createElement(o.ControlLabel,null,"Suspend"),t().createElement(o.Toggle,{onChange:t=>n({...e,suspended:t,authorized:!t&&e.authorized}),checked:e.suspended}),t().createElement(o.HelpBlock,null,"Suspended user cannot access a public chatbot"))));var l=s(570);function i(){return(i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}const c=[{name:"authorization.notAuthorized",description:"Shown when the user is not authorized in a private chatbot"},{name:"authorization.suspended",description:"Shown when the user is suspeded in a public chatbot"},{name:"authorization.userNotFound",description:"Shown when the user is not found on the local db, something went wrong"}],{NodeRedNode:p,SlugHelp:d,TypeCommand:m}=n.HelpElements;(0,r.plug)("user-tabs",a,{id:"suspend-user",label:"Access",permission:"users.authorize"});(0,r.plug)("sidebar",null,{permission:"configure",id:"configuration",label:"Configuration",icon:"cog",options:[{id:"authorization",label:"Bot Access",url:"/authorization"}]}),(0,r.plug)("pages",(0,n.withConfigurationPage)("redbot-authorization",({value:r,onSubmit:n=(()=>{}),disabled:a=!1})=>{const[s,u]=(0,e.useState)(r),[p,d]=(0,e.useState)(null),[m,h]=(0,e.useState)("access"),g=(0,e.useRef)(null);return t().createElement("div",null,t().createElement(o.Nav,{appearance:"tabs",activeKey:m,onSelect:h,style:{marginBottom:"25px"}},t().createElement(o.Nav.Item,{eventKey:"access"},"Access"),t().createElement(o.Nav.Item,{eventKey:"translations"},"Translations")),t().createElement(o.Form,{disabled:!0,formValue:s,formError:p,ref:g,checkTrigger:"none",layout:"vertical",fluid:!0,onChange:e=>{u(e),d(null)},onCheck:e=>{d(e)}},"translations"===m&&t().createElement(e.Fragment,null,t().createElement(o.FormGroup,null,t().createElement(o.FormControl,{name:"translations",accepter:l.Dictionary,schema:c,disabled:a}))),"access"===m&&t().createElement(e.Fragment,null,t().createElement(o.FormGroup,null,t().createElement(o.ControlLabel,null,"Private"),t().createElement(o.FormControl,{name:"private",accepter:(b=o.Toggle,({value:e,...r})=>t().createElement(b,i({checked:e},r))),disabled:a}),t().createElement(o.HelpBlock,null,"In a private chatbot, only authorized user can access"))),t().createElement(o.FormGroup,{style:{marginTop:"40px"}},t().createElement(o.ButtonToolbar,null,t().createElement(o.Button,{disabled:a,appearance:"primary",onClick:()=>{g.current.check()&&n(s)}},"Save configuration"),t().createElement(o.Button,{disabled:a,appearance:"default",onClick:()=>{confirm("Reset configuration?")&&u(r)}},"Reset")))));var b},{Legend:()=>t().createElement("div",null,t().createElement(p,null,"Authorization"),t().createElement("p",null,"Set the chatbot private, only authorized user will be able to use the chatbot. Set the authorization in the users section."),t().createElement("p",null,"For public chatbot it's possibile to suspend a user.")),title:"Bot Access"}),{permission:"configure",url:"/authorization",title:"Welcome Message",id:"page-authorization"}),(0,r.plug)("permissions",null,{permission:"users.authorize",name:"Authorize/Suspend",description:"Authorize or suspend a user",group:"Users"})})(),u})());